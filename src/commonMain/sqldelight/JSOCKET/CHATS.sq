table_Chats:
CREATE TABLE IF NOT EXISTS Chats
(CHATS_ID TEXT PRIMARY KEY,                    --IDENTIFICATOR_5
 MESSEGES_COUNT INTEGER DEFAULT "0" NOT NULL,  --LONG_5
 COUNT_OF_MEMBERS INTEGER DEFAULT "0" NOT NULL,--LONG_8
 CHATS_OWNER TEXT NOT NULL,                    --IDENTIFICATOR_7
 CHATS_TWINS TEXT NOT NULL,                    --IDENTIFICATOR_8
 CHATS_NAME TEXT,                              --STRING_5
 AVATAR_ID TEXT,                               --IDENTIFICATOR_6
 CHATS_PROFILE TEXT NOT NULL,                  --STRING_7.substring(0, 5)
 CHATS_TYPE TEXT NOT NULL,                     --STRING_7.substring(5, 6)
 CHATS_ACCESS TEXT NOT NULL,                   --STRING_7.substring(6, 7)
 CHATS_STATUS TEXT NOT NULL,                   --STRING_7.substring(7, 8)
 ADDING_DATE INTEGER NOT NULL,                 --LONG_4
 BALANCE INTEGER NOT NULL,                     --LONG_9
 LAST_MESSEGES_ADDING INTEGER NOT NULL,        --LONG_10
 DATE_CLOSED INTEGER NOT NULL,                 --LONG_6
 CHATS_SUBSCRIBE TEXT,                         --STRING_14
 LAST_UPDATE INTEGER NOT NULL,                 --LONG_7
 ORIGINAL_AVATAR_SIZE TEXT,                    --STRING_17
 AVATAR_SERVER TEXT,                           --STRING_16
 AVATAR_LINK TEXT,                             --STRING_18
 AVATAR BLOB,
 CONNECTION_ID INTEGER NOT NULL,               --LONG_19
 STRING_20 TEXT NOT NULL,
CHECK (length(CHATS_ID) = 18
AND length(CHATS_OWNER) = 18
AND length(CHATS_PROFILE) = 5
));

index_Chats_last_mess_adding:
CREATE INDEX IChatsLastMessAdding ON Chats(LAST_MESSEGES_ADDING DESC);

index_Chats_ConnectionId:
CREATE INDEX IChatsConnectionId ON Chats(CONNECTION_ID);

index_Chats_AvatarId:
CREATE INDEX IChatsAvatarId ON Chats(AVATAR_ID);

trigger_Chats_delete:
CREATE TRIGGER TChats_DELETE
AFTER DELETE ON Chats
FOR EACH ROW
BEGIN
DELETE FROM Messeges  WHERE CHATS_ID = old.CHATS_ID;
DELETE FROM ChatsLikes WHERE CHATS_ID = old.CHATS_ID;
DELETE FROM ChatsCostTypes WHERE CHATS_ID = old.CHATS_ID;
END;

trigger_Chats_control_count:
CREATE TRIGGER TControlCountsChats
AFTER INSERT ON Chats
WHEN
(SELECT count(*) FROM Chats) > (SELECT  VALUE_VALUE FROM MetaData WHERE VALUE_NAME = 'MAX_COUNT_OF_CHATS')
BEGIN
DELETE FROM Chats WHERE CHATS_ID NOT IN
(SELECT CHATS_ID
 FROM Chats
 ORDER BY LAST_MESSEGES_ADDING DESC
 LIMIT (SELECT  VALUE_VALUE
        FROM MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_CHATS'));
END;

insert_Chats:
INSERT OR REPLACE INTO Chats
( CHATS_ID,
  MESSEGES_COUNT,
  COUNT_OF_MEMBERS,
  CHATS_OWNER,
  CHATS_TWINS,
  CHATS_NAME,
  AVATAR_ID,
  CHATS_PROFILE,
  CHATS_ACCESS,
  CHATS_TYPE,
  CHATS_STATUS,
  ADDING_DATE,
  BALANCE,
  LAST_MESSEGES_ADDING,
  DATE_CLOSED,
  CHATS_SUBSCRIBE,
  LAST_UPDATE,
  AVATAR_LINK,
  AVATAR_SERVER,
  AVATAR,
  CONNECTION_ID,
  STRING_20)
VALUES 
(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

select_Chats_all:
SELECT * FROM Chats
ORDER BY LAST_MESSEGES_ADDING DESC;

claer_Chats:
DELETE FROM Chats;
