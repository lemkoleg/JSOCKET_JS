table_CashData:
CREATE TABLE IF NOT EXISTS CashData
(CASH_SUM TEXT NOT NULL,
 RECORD_TABLE_ID TEXT NOT NULL,
 IDENTIFICATOR_1 TEXT,
 IDENTIFICATOR_2 TEXT,
 IDENTIFICATOR_3 TEXT,
 IDENTIFICATOR_4 TEXT,
 IDENTIFICATOR_5 TEXT,
 IDENTIFICATOR_6 TEXT,
 IDENTIFICATOR_7 TEXT,
 IDENTIFICATOR_8 TEXT,
 IDENTIFICATOR_9 TEXT,
 IDENTIFICATOR_10 TEXT,
 IDENTIFICATOR_11 TEXT,
 IDENTIFICATOR_12 TEXT,
 IDENTIFICATOR_13 TEXT,
 IDENTIFICATOR_14 TEXT,
 IDENTIFICATOR_15 TEXT,
 IDENTIFICATOR_16 TEXT,
 IDENTIFICATOR_17 TEXT,
 IDENTIFICATOR_18 TEXT,
 IDENTIFICATOR_19 TEXT,
 IDENTIFICATOR_20 TEXT,
 INTEGER_1 INTEGER,
 INTEGER_2 INTEGER,
 INTEGER_3 INTEGER,
 INTEGER_4 INTEGER,
 INTEGER_5 INTEGER,
 INTEGER_6 INTEGER,
 INTEGER_7 INTEGER,
 INTEGER_8 INTEGER,
 INTEGER_9 INTEGER,
 INTEGER_10 INTEGER,
 INTEGER_11 INTEGER,
 INTEGER_12 INTEGER,
 INTEGER_13 INTEGER,
 INTEGER_14 INTEGER,
 INTEGER_15 INTEGER,
 INTEGER_16 INTEGER,
 INTEGER_17 INTEGER,
 INTEGER_18 INTEGER,
 INTEGER_19 INTEGER,
 INTEGER_20 INTEGER NOT NULL DEFAULT 1,     -- NUMBER position
 LONG_1 INTEGER,
 LONG_2 INTEGER,
 LONG_3 INTEGER,
 LONG_4 INTEGER,
 LONG_5 INTEGER,
 LONG_6 INTEGER,
 LONG_7 INTEGER,
 LONG_8 INTEGER,
 LONG_9 INTEGER,
 LONG_10 INTEGER,
 LONG_11 INTEGER,
 LONG_12 INTEGER,
 LONG_13 INTEGER,
 LONG_14 INTEGER,
 LONG_15 INTEGER,
 LONG_16 INTEGER,
 LONG_17 INTEGER,
 LONG_18 INTEGER,
 LONG_19 INTEGER,
 LONG_20 INTEGER NOT NULL,   -- last select;
 STRING_1 TEXT,
 STRING_2 TEXT,
 STRING_3 TEXT,
 STRING_4 TEXT,
 STRING_5 TEXT,
 STRING_6 TEXT,
 STRING_7 TEXT,
 STRING_8 TEXT,
 STRING_9 TEXT,
 STRING_10 TEXT,
 STRING_11 TEXT,
 STRING_12 TEXT,
 STRING_13 TEXT,
 STRING_14 TEXT,
 STRING_15 TEXT,
 STRING_16 TEXT,
 STRING_17 TEXT,
 STRING_18 TEXT,
 STRING_19 TEXT,
 STRING_20 TEXT NOT NULL,
 BLOB_1 BLOB ,
 BLOB_2 BLOB ,
 BLOB_3 BLOB,
 INTEGER_20_LEVEL INTEGER NOT NULL DEFAULT 100000, -- for sort NEW NUMBERS POSITION
 NEXT_RECORD_TABLE_ID TEXT NOT NULL DEFAULT "",  -- for sort NEW NUMBERS POSITION
 PRIMARY KEY (CASH_SUM, RECORD_TABLE_ID)
 );

 index_CashData_NumberPositionAsc:
 CREATE INDEX IF NOT EXISTS CashData_NumberPositionAsc ON CashData(CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC, RECORD_TABLE_ID);

 index_CashData_NumberPositionDesc:
 CREATE INDEX IF NOT EXISTS CashData_NumberPositionDesc ON CashData(CASH_SUM, INTEGER_20 DESC, INTEGER_20_LEVEL DESC, RECORD_TABLE_ID);

 trigger_CashData_After_Insert:
  CREATE TRIGGER IF NOT EXISTS TCashDataAfterInsert
  AFTER INSERT ON CashData
  FOR EACH ROW
  WHEN EXISTS (SELECT c.RECORD_TABLE_ID
               FROM   CashData AS c
               WHERE  c.CASH_SUM = new.CASH_SUM
               ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
               LIMIT 1 OFFSET new.INTEGER_20 - 1)
  AND new.RECORD_TABLE_ID != (SELECT c.RECORD_TABLE_ID
                              FROM   CashData AS c
                              WHERE  c.CASH_SUM = new.CASH_SUM
                              ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
                              LIMIT 1 OFFSET new.INTEGER_20 - 1)
  BEGIN
    WITH tab (record_id, integer_20, integer_20_level)
    AS (SELECT c1.RECORD_TABLE_ID,
               c1.INTEGER_20,
               c1.INTEGER_20_LEVEL
        FROM CashData AS c1
        WHERE c1.CASH_SUM = new.CASH_SUM
        ORDER BY c1.CASH_SUM,
                 c1.INTEGER_20 ASC,
                 c1.INTEGER_20_LEVEL ASC
        LIMIT 1 OFFSET new.INTEGER_20 - 1)

   UPDATE CashData
     SET    NEXT_RECORD_TABLE_ID = (SELECT record_id FROM tab LIMIT 1),
            INTEGER_20 = (SELECT integer_20 FROM tab LIMIT 1),
            INTEGER_20_LEVEL = (SELECT integer_20_level FROM tab LIMIT 1)
     WHERE  CASH_SUM = new.CASH_SUM
     AND    RECORD_TABLE_ID = new.RECORD_TABLE_ID;

   WITH tab2 (record_id, next_record_id, integer_20_level)
       AS (SELECT c2.RECORD_TABLE_ID,
                  c2.NEXT_RECORD_TABLE_ID,
                  c2.INTEGER_20_LEVEL
           FROM CashData AS c2
           WHERE c2.CASH_SUM = new.CASH_SUM
           AND   c2.RECORD_TABLE_ID = new.RECORD_TABLE_ID)

   UPDATE CashData
       SET    INTEGER_20_LEVEL = ifnull((SELECT integer_20_level FROM tab2 LIMIT 1), 0) + 1
       WHERE  CASH_SUM = new.CASH_SUM
       AND    RECORD_TABLE_ID = (SELECT next_record_id  FROM tab2 LIMIT 1);

  END;
       
insert_CashData:
REPLACE INTO CashData
( CASH_SUM,
  RECORD_TABLE_ID,
  IDENTIFICATOR_1,
  IDENTIFICATOR_2,
  IDENTIFICATOR_3,
  IDENTIFICATOR_4,
  IDENTIFICATOR_5,
  IDENTIFICATOR_6,
  IDENTIFICATOR_7,
  IDENTIFICATOR_8,
  IDENTIFICATOR_9,
  IDENTIFICATOR_10,
  IDENTIFICATOR_11,
  IDENTIFICATOR_12,
  IDENTIFICATOR_13,
  IDENTIFICATOR_14,
  IDENTIFICATOR_15,
  IDENTIFICATOR_16,
  IDENTIFICATOR_17,
  IDENTIFICATOR_18,
  IDENTIFICATOR_19,
  IDENTIFICATOR_20,
  INTEGER_1,
  INTEGER_2,
  INTEGER_3,
  INTEGER_4,
  INTEGER_5,
  INTEGER_6,
  INTEGER_7,
  INTEGER_8,
  INTEGER_9,
  INTEGER_10,
  INTEGER_11,
  INTEGER_12,
  INTEGER_13,
  INTEGER_14,
  INTEGER_15,
  INTEGER_16,
  INTEGER_17,
  INTEGER_18,
  INTEGER_19,
  INTEGER_20,
  LONG_1,
  LONG_2,
  LONG_3,
  LONG_4,
  LONG_5,
  LONG_6,
  LONG_7,
  LONG_8,
  LONG_9,
  LONG_10,
  LONG_11,
  LONG_12,
  LONG_13,
  LONG_14,
  LONG_15,
  LONG_16,
  LONG_17,
  LONG_18,
  LONG_19,
  LONG_20,
  STRING_1,
  STRING_2,
  STRING_3,
  STRING_4,
  STRING_5,
  STRING_6,
  STRING_7,
  STRING_8,
  STRING_9,
  STRING_10,
  STRING_11,
  STRING_12,
  STRING_13,
  STRING_14,
  STRING_15,
  STRING_16,
  STRING_17,
  STRING_18,
  STRING_19,
  STRING_20,
  BLOB_1,
  BLOB_2,
  BLOB_3)
VALUES 
(?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ?);


 select_CashData_All:
  SELECT  *
  FROM CashData
  ORDER BY CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC;

 select_CashData_All_ON_CASH_SUM:
  SELECT  *
  FROM CashData
  WHERE CASH_SUM = ?
  ORDER BY CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC;

 select_CashData:
   SELECT  *
   FROM CashData
   WHERE CASH_SUM = ?
   AND RECORD_TABLE_ID = ?;

 clear_CashData:
  DELETE FROM CashData;

 update_CashData_SortNewNumbersPositions:
  WITH tab AS (SELECT
                 CASH_SUM AS cash_sum,
                 RECORD_TABLE_ID AS record_id,
                 row_number() OVER (
                      ORDER BY CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC
                 ) AS RowNumber
                 FROM
                     CashData
                 WHERE CASH_SUM = ?
                 ORDER BY CASH_SUM, RECORD_TABLE_ID)

  UPDATE CashData
  SET   INTEGER_20 = (SELECT t.RowNumber
                      FROM tab AS t
                      WHERE t.cash_sum = ?
                      AND   t.record_id = RECORD_TABLE_ID),
        INTEGER_20_LEVEL = 0,
        NEXT_RECORD_TABLE_ID = ""
        WHERE CASH_SUM = ?;


 update_CashData_NEW_LAST_SELECT:
       UPDATE CashData
       SET    LONG_20 = ?
       WHERE  CASH_SUM = ?
       AND    RECORD_TABLE_ID IN (SELECT c.RECORD_TABLE_ID
                                  FROM   CashData AS c
                                  WHERE  c.CASH_SUM = ?
                                  ORDER BY c.CASH_SUM,
                                           c.INTEGER_20 ASC,
                                           c.INTEGER_20_LEVEL ASC
                                  LIMIT (SELECT  VALUE_VALUE
                                         FROM MetaData
                                         WHERE VALUE_NAME = 'LIMIT_FOR_SELECT')
                                  OFFSET (ifnull((SELECT tab.RowNumber
                                                  FROM (SELECT c1.RECORD_TABLE_ID AS record_id,
                                                               row_number() OVER (
                                                                          ORDER BY c1.CASH_SUM, c1.INTEGER_20 ASC, c1.INTEGER_20_LEVEL ASC
                                                                ) AS RowNumber
                                                         FROM   CashData AS c1
                                                         WHERE  c1.CASH_SUM = ?
                                                         ORDER BY c1.RECORD_TABLE_ID) AS tab
                                                  WHERE  tab.record_id = ?), 0))
                                  );

 delete_CashData_DeletedRecords:
  DELETE
    FROM CashData
    WHERE  CASH_SUM = ?
    AND substr(STRING_20, 7, 1) = "1";



