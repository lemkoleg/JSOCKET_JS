table_CashData:
CREATE TABLE IF NOT EXISTS CashData
(CONNECTION_ID TEXT NOT NULL,
 CASH_SUM TEXT NOT NULL,    -- OBJECT id and RECORD_TYPE
 RECORD_TABLE_ID TEXT NOT NULL,
 IDENTIFICATOR_1 TEXT,
 IDENTIFICATOR_2 TEXT,
 IDENTIFICATOR_3 TEXT,
 IDENTIFICATOR_4 TEXT,
 IDENTIFICATOR_5 TEXT,
 IDENTIFICATOR_6 TEXT,
 IDENTIFICATOR_7 TEXT,
 IDENTIFICATOR_8 TEXT,
 IDENTIFICATOR_9 TEXT,
 IDENTIFICATOR_10 TEXT,
 IDENTIFICATOR_11 TEXT,
 IDENTIFICATOR_12 TEXT,
 IDENTIFICATOR_13 TEXT,
 IDENTIFICATOR_14 TEXT,
 IDENTIFICATOR_15 TEXT,
 IDENTIFICATOR_16 TEXT,
 IDENTIFICATOR_17 TEXT,
 IDENTIFICATOR_18 TEXT,
 IDENTIFICATOR_19 TEXT,
 IDENTIFICATOR_20 TEXT,
 INTEGER_1 INTEGER,
 INTEGER_2 INTEGER,
 INTEGER_3 INTEGER,
 INTEGER_4 INTEGER,
 INTEGER_5 INTEGER,
 INTEGER_6 INTEGER,
 INTEGER_7 INTEGER,
 INTEGER_8 INTEGER,
 INTEGER_9 INTEGER,
 INTEGER_10 INTEGER,
 INTEGER_11 INTEGER,
 INTEGER_12 INTEGER,
 INTEGER_13 INTEGER,
 INTEGER_14 INTEGER,
 INTEGER_15 INTEGER,
 INTEGER_16 INTEGER,
 INTEGER_17 INTEGER,
 INTEGER_18 INTEGER,
 INTEGER_19 INTEGER,
 INTEGER_20 INTEGER NOT NULL DEFAULT 1,     -- NUMBER position
 LONG_1 INTEGER,
 LONG_2 INTEGER,
 LONG_3 INTEGER,
 LONG_4 INTEGER,
 LONG_5 INTEGER,
 LONG_6 INTEGER,
 LONG_7 INTEGER,
 LONG_8 INTEGER,
 LONG_9 INTEGER,
 LONG_10 INTEGER,
 LONG_11 INTEGER,
 LONG_12 INTEGER,
 LONG_13 INTEGER,
 LONG_14 INTEGER,
 LONG_15 INTEGER,
 LONG_16 INTEGER,
 LONG_17 INTEGER,
 LONG_18 INTEGER,
 LONG_19 INTEGER,
 LONG_20 INTEGER NOT NULL,   -- last select;
 STRING_1 TEXT,
 STRING_2 TEXT,
 STRING_3 TEXT,
 STRING_4 TEXT,
 STRING_5 TEXT,
 STRING_6 TEXT,
 STRING_7 TEXT,
 STRING_8 TEXT,
 STRING_9 TEXT,
 STRING_10 TEXT,
 STRING_11 TEXT,
 STRING_12 TEXT,
 STRING_13 TEXT,
 STRING_14 TEXT,
 STRING_15 TEXT,
 STRING_16 TEXT,
 STRING_17 TEXT,
 STRING_18 TEXT,
 STRING_19 TEXT,
 STRING_20 TEXT NOT NULL,
 BLOB_1 BLOB ,
 BLOB_2 BLOB ,
 BLOB_3 BLOB,
 INTEGER_20_LEVEL INTEGER NOT NULL DEFAULT 100001, -- for sort NEW NUMBERS POSITION
 NEXT_RECORD_TABLE_ID TEXT NOT NULL DEFAULT "",  -- for sort NEW NUMBERS POSITION
 PRIMARY KEY (CONNECTION_ID, CASH_SUM, RECORD_TABLE_ID)
 );

 index_CashData_NumberPositionAsc:
 CREATE INDEX IF NOT EXISTS CashData_NumberPositionAsc ON CashData(CONNECTION_ID, CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC, RECORD_TABLE_ID);

 index_CashData_CashSum:
 CREATE INDEX IF NOT EXISTS CashData_CashSum ON CashData(CASH_SUM);

 trigger_CashData_After_Insert:
  CREATE TRIGGER IF NOT EXISTS TCashDataAfterInsert
  AFTER INSERT ON CashData
  FOR EACH ROW
  WHEN SUBSTR(new.CASH_SUM, 19, 1) NOT IN ('J', 'K', 'L') -- not for objects info;
  AND EXISTS (SELECT c.RECORD_TABLE_ID
               FROM   CashData AS c
               WHERE  c.CONNECTION_ID = new.CONNECTION_ID
               AND    c.CASH_SUM = new.CASH_SUM
               ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
               LIMIT 1 OFFSET new.INTEGER_20 - 1)
  AND new.RECORD_TABLE_ID != (SELECT c.RECORD_TABLE_ID
                              FROM   CashData AS c
                              WHERE  c.CONNECTION_ID = new.CONNECTION_ID
                              AND    c.CASH_SUM = new.CASH_SUM
                              ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
                              LIMIT 1 OFFSET new.INTEGER_20 - 1)
  BEGIN
    WITH tab (record_id_1, integer_20_1, integer_20_level_1)
    AS (SELECT c1.RECORD_TABLE_ID,
               c1.INTEGER_20,
               c1.INTEGER_20_LEVEL
        FROM CashData AS c1
        WHERE c1.CONNECTION_ID = new.CONNECTION_ID
        AND   c1.CASH_SUM = new.CASH_SUM
        ORDER BY c1.CASH_SUM,
                 c1.INTEGER_20 ASC,
                 c1.INTEGER_20_LEVEL ASC
        LIMIT 1 OFFSET new.INTEGER_20 - 1)

   UPDATE CashData
   SET    NEXT_RECORD_TABLE_ID = (SELECT record_id_1 FROM tab LIMIT 1),
          INTEGER_20 = (SELECT integer_20_1 FROM tab LIMIT 1),
          INTEGER_20_LEVEL = (SELECT integer_20_level_1 FROM tab LIMIT 1)
   WHERE  CONNECTION_ID = new.CONNECTION_ID
   AND    CASH_SUM = new.CASH_SUM
   AND    RECORD_TABLE_ID = new.RECORD_TABLE_ID;

   WITH tab2 (next_record_id_2, integer_20_level_2)
       AS (SELECT c2.NEXT_RECORD_TABLE_ID,
                  c2.INTEGER_20_LEVEL
           FROM CashData AS c2
           WHERE c2.CONNECTION_ID = new.CONNECTION_ID
           AND   c2.CASH_SUM = new.CASH_SUM
           AND   c2.RECORD_TABLE_ID = new.RECORD_TABLE_ID)

   UPDATE CashData
   SET    INTEGER_20_LEVEL = ifnull((SELECT integer_20_level_2 FROM tab2 LIMIT 1), 0) + 1
   WHERE  CONNECTION_ID = new.CONNECTION_ID
   AND    CASH_SUM = new.CASH_SUM
   AND    RECORD_TABLE_ID = (SELECT next_record_id_2  FROM tab2 LIMIT 1);

  END;

  /**   alternative version 3.33
     CREATE TRIGGER IF NOT EXISTS TCashDataAfterInsert
       AFTER INSERT ON CashData
       FOR EACH ROW
       WHEN SUBSTR(new.CASH_SUM, 19, 1) NOT IN ('J', 'K', 'L') -- not for objects info;
       AND EXISTS (SELECT c.RECORD_TABLE_ID
                    FROM   CashData AS c
                    WHERE  c.CONNECTION_ID = new.CONNECTION_ID
                    AND    c.CASH_SUM = new.CASH_SUM
                    ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
                    LIMIT 1 OFFSET new.INTEGER_20 - 1)
       AND new.RECORD_TABLE_ID != (SELECT c.RECORD_TABLE_ID
                                   FROM   CashData AS c
                                   WHERE  c.CONNECTION_ID = new.CONNECTION_ID
                                   AND    c.CASH_SUM = new.CASH_SUM
                                   ORDER BY c.CASH_SUM, c.INTEGER_20 ASC, c.INTEGER_20_LEVEL ASC
                                   LIMIT 1 OFFSET new.INTEGER_20 - 1)
       BEGIN

        UPDATE CashData
        SET    NEXT_RECORD_TABLE_ID = record_id_1,
               INTEGER_20 = integer_20_1,
               INTEGER_20_LEVEL = integer_20_level_1
        FROM  (SELECT c1.RECORD_TABLE_ID AS record_id_1,
                      c1.INTEGER_20 AS integer_20_1,
                      c1.INTEGER_20_LEVEL AS integer_20_level_1
               FROM CashData AS c1
               WHERE c1.CONNECTION_ID = new.CONNECTION_ID
               AND   c1.CASH_SUM = new.CASH_SUM
               ORDER BY c1.CASH_SUM,
                        c1.INTEGER_20 ASC,
                       c1.INTEGER_20_LEVEL ASC
               LIMIT 1 OFFSET new.INTEGER_20 - 1)
        WHERE  CONNECTION_ID = new.CONNECTION_ID
        AND    CASH_SUM = new.CASH_SUM
        AND    RECORD_TABLE_ID = new.RECORD_TABLE_ID;


        UPDATE CashData
        SET    INTEGER_20_LEVEL = ifnull(integer_20_level_2, 0) + 1
        FROM  (SELECT c2.NEXT_RECORD_TABLE_ID AS next_record_id_2,
                      c2.INTEGER_20_LEVEL AS integer_20_level_2
               FROM CashData AS c2
               WHERE c2.CONNECTION_ID = new.CONNECTION_ID
               AND   c2.CASH_SUM = new.CASH_SUM
               AND   c2.RECORD_TABLE_ID = new.RECORD_TABLE_ID)
        WHERE  CONNECTION_ID = new.CONNECTION_ID
        AND    CASH_SUM = new.CASH_SUM
        AND    RECORD_TABLE_ID = next_record_id_2;

       END;
     */

   trigger_CashData_After_Insert_Objects_Info:
    CREATE TRIGGER IF NOT EXISTS TCashDataAfterInsertObjectsInfo
    AFTER INSERT ON CashData
    FOR EACH ROW
    WHEN SUBSTR(new.CASH_SUM, 19, 1) IN ('J', 'K', 'L') -- for objects info;
    BEGIN

     UPDATE CashData
       SET    IDENTIFICATOR_1 = new.IDENTIFICATOR_1,
              IDENTIFICATOR_2 = new.IDENTIFICATOR_2,
              IDENTIFICATOR_3 = new.IDENTIFICATOR_3,
              IDENTIFICATOR_4 = new.IDENTIFICATOR_4,
              IDENTIFICATOR_5 = new.IDENTIFICATOR_5,
              IDENTIFICATOR_6 = new.IDENTIFICATOR_6,
              IDENTIFICATOR_7 = new.IDENTIFICATOR_7,
              IDENTIFICATOR_8 = new.IDENTIFICATOR_8,
              IDENTIFICATOR_9 = new.IDENTIFICATOR_9,
              IDENTIFICATOR_10 = new.IDENTIFICATOR_10,
              IDENTIFICATOR_11 = new.IDENTIFICATOR_11,
              IDENTIFICATOR_12 = new.IDENTIFICATOR_12,
              IDENTIFICATOR_13 = new.IDENTIFICATOR_13,
              IDENTIFICATOR_14 = new.IDENTIFICATOR_14,
              IDENTIFICATOR_15 = new.IDENTIFICATOR_15,
              IDENTIFICATOR_16 = new.IDENTIFICATOR_16,
              IDENTIFICATOR_17 = new.IDENTIFICATOR_17,
              IDENTIFICATOR_18 = new.IDENTIFICATOR_18,
              IDENTIFICATOR_19 = new.IDENTIFICATOR_19,
              IDENTIFICATOR_20 = new.IDENTIFICATOR_20,
              INTEGER_1 = new.INTEGER_1,
              INTEGER_2 = new.INTEGER_2,
              INTEGER_3 = new.INTEGER_3,
              INTEGER_4 = new.INTEGER_4,
              INTEGER_5 = new.INTEGER_5,
              INTEGER_6 = new.INTEGER_6,
              INTEGER_7 = new.INTEGER_7,
              INTEGER_8 = new.INTEGER_8,
              INTEGER_9 = new.INTEGER_9,
              INTEGER_10 = new.INTEGER_10,
              INTEGER_11 = new.INTEGER_11,
              INTEGER_12 = new.INTEGER_12,
              INTEGER_13 = new.INTEGER_13,
              INTEGER_14 = new.INTEGER_14,
              INTEGER_15 = new.INTEGER_15,
              INTEGER_16 = new.INTEGER_16,
              INTEGER_17 = new.INTEGER_17,
              INTEGER_18 = new.INTEGER_18,
              INTEGER_19 = new.INTEGER_19,
              LONG_1 = new.LONG_1,
              LONG_2 = new.LONG_2,
              LONG_3 = new.LONG_3,
              LONG_4 = new.LONG_4,
              LONG_5 = new.LONG_5,
              LONG_6 = new.LONG_6,
              LONG_7 = new.LONG_7,
              LONG_8 = new.LONG_8,
              LONG_9 = new.LONG_9,
              LONG_10 = new.LONG_10,
              LONG_11 = new.LONG_11,
              LONG_12 = new.LONG_12,
              LONG_13 = new.LONG_13,
              LONG_14 = new.LONG_14,
              LONG_15 = new.LONG_15,
              LONG_16 = new.LONG_16,
              LONG_17 = new.LONG_17,
              LONG_18 = new.LONG_18,
              LONG_19 = new.LONG_19,
              LONG_20 = new.LONG_20,
              STRING_1 = new.STRING_1,
              STRING_2 = new.STRING_2,
              STRING_3 = new.STRING_3,
              STRING_4 = new.STRING_4,
              STRING_5 = new.STRING_5,
              STRING_6 = new.STRING_6,
              STRING_7 = new.STRING_7,
              STRING_8 = new.STRING_8,
              STRING_9 = new.STRING_9,
              STRING_10 = new.STRING_10,
              STRING_11 = new.STRING_11,
              STRING_12 = new.STRING_12,
              STRING_13 = new.STRING_13,
              STRING_14 = new.STRING_14,
              STRING_15 = new.STRING_15,
              STRING_16 = new.STRING_16,
              STRING_17 = new.STRING_17,
              STRING_18 = new.STRING_18,
              STRING_19 = new.STRING_19,
              STRING_20 = new.STRING_20,
              BLOB_1 = new.BLOB_1,
              BLOB_2 = new.BLOB_2,
              BLOB_3 = new.BLOB_3
       WHERE  CONNECTION_ID = new.CONNECTION_ID
       AND    CASH_SUM = (SELECT ACCOUNT_ID FROM RegData) + 'O00' -- update SAVE_OBJECT_INFO;
       AND    RECORD_TABLE_ID = new.RECORD_TABLE_ID;

    END;


trigger_CashData_After_Update:
  CREATE TRIGGER IF NOT EXISTS TCashDataAfterUpdate
  AFTER UPDATE ON CashData
  FOR EACH ROW
  WHEN new.LONG_20 != old.LONG_20
  AND substr(new.STRING_20, 7,1) = '1'
  BEGIN
    DELETE
    FROM  CashData
    WHERE rowid = new.rowid;
  END;
       
insert_CashData:
REPLACE INTO CashData
( CONNECTION_ID,
  CASH_SUM,
  RECORD_TABLE_ID,
  IDENTIFICATOR_1,
  IDENTIFICATOR_2,
  IDENTIFICATOR_3,
  IDENTIFICATOR_4,
  IDENTIFICATOR_5,
  IDENTIFICATOR_6,
  IDENTIFICATOR_7,
  IDENTIFICATOR_8,
  IDENTIFICATOR_9,
  IDENTIFICATOR_10,
  IDENTIFICATOR_11,
  IDENTIFICATOR_12,
  IDENTIFICATOR_13,
  IDENTIFICATOR_14,
  IDENTIFICATOR_15,
  IDENTIFICATOR_16,
  IDENTIFICATOR_17,
  IDENTIFICATOR_18,
  IDENTIFICATOR_19,
  IDENTIFICATOR_20,
  INTEGER_1,
  INTEGER_2,
  INTEGER_3,
  INTEGER_4,
  INTEGER_5,
  INTEGER_6,
  INTEGER_7,
  INTEGER_8,
  INTEGER_9,
  INTEGER_10,
  INTEGER_11,
  INTEGER_12,
  INTEGER_13,
  INTEGER_14,
  INTEGER_15,
  INTEGER_16,
  INTEGER_17,
  INTEGER_18,
  INTEGER_19,
  INTEGER_20,
  LONG_1,
  LONG_2,
  LONG_3,
  LONG_4,
  LONG_5,
  LONG_6,
  LONG_7,
  LONG_8,
  LONG_9,
  LONG_10,
  LONG_11,
  LONG_12,
  LONG_13,
  LONG_14,
  LONG_15,
  LONG_16,
  LONG_17,
  LONG_18,
  LONG_19,
  LONG_20,
  STRING_1,
  STRING_2,
  STRING_3,
  STRING_4,
  STRING_5,
  STRING_6,
  STRING_7,
  STRING_8,
  STRING_9,
  STRING_10,
  STRING_11,
  STRING_12,
  STRING_13,
  STRING_14,
  STRING_15,
  STRING_16,
  STRING_17,
  STRING_18,
  STRING_19,
  STRING_20,
  BLOB_1,
  BLOB_2,
  BLOB_3)
VALUES 
((SELECT CONNECTION_ID FROM RegData), ?,?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ?,
 ?, ?, ?, ?, ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ? , ? , ? , ? , ? , ? , ?
 , ? , ? , ?);


 select_CashData_All:
  SELECT  *
  FROM CashData
  WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
  ORDER BY CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC;

 select_CashData_All_ON_CASH_SUM:
  SELECT  *
  FROM CashData
  WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
  AND    CASH_SUM = ?
  ORDER BY CASH_SUM, INTEGER_20 ASC, INTEGER_20_LEVEL ASC;

 select_CashData_CHUNK_ON_CASH_SUM:
   SELECT  *
   FROM CashData AS c
   WHERE c.CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
   AND   c.CASH_SUM = ?
   ORDER BY c.CONNECTION_ID,
            c.CASH_SUM,
            c.INTEGER_20 ASC,
            c.INTEGER_20_LEVEL ASC
   LIMIT (SELECT  VALUE_VALUE AS val
          FROM MetaData
          WHERE VALUE_NAME = 'LIMIT_FOR_SELECT')
   OFFSET 0 + ifnull((SELECT tab1.RowNumber FROM (SELECT row_number() OVER (
                                                          ORDER BY c1.INTEGER_20 ASC, c1.INTEGER_20_LEVEL ASC
                                                           ) AS RowNumber,
                                                         c1.RECORD_TABLE_ID AS record_id
                                                  FROM CashData AS c1
                                                  WHERE  c1.CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
                                                  AND    c1.CASH_SUM = ?
                                                  ORDER BY record_id) AS tab1
                      WHERE record_id = ?), 0);

 select_CashData:
   SELECT  *
   FROM CashData
   WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
   AND   CASH_SUM = ?
   AND   RECORD_TABLE_ID = ?;

 select_CashDataAllRecordsIdOnCashSum:
   SELECT RECORD_TABLE_ID
   FROM CashData
   WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
   AND   CASH_SUM = ?;

 clear_CashData:
  DELETE FROM CashData;

 delete_CashData:
   DELETE FROM CashData
   WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
   AND   CASH_SUM = ?;

  delete_CashDataRecord:
    DELETE FROM CashData
    WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
    AND   CASH_SUM = ?
    AND   RECORD_TABLE_ID = ?;

 update_CashData_SortNewNumbersPositions:
  DELETE FROM CashDataNumbersOfRecords;
  WITH tab AS (SELECT CONNECTION_ID AS conn,
                      CASH_SUM AS cash,
                      RECORD_TABLE_ID AS rec_num,
                      row_number() OVER (
                           ORDER BY INTEGER_20 ASC, INTEGER_20_LEVEL ASC
                      ) AS row_num
                FROM      CashData
                WHERE     CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
                AND       CASH_SUM = ?)
  INSERT INTO CashDataNumbersOfRecords
  SELECT conn, cash, rec_num, row_num
  FROM      tab;

  UPDATE CashData
  SET   INTEGER_20 = (SELECT t.NUM_POSISTION
                      FROM CashDataNumbersOfRecords AS t
                      WHERE t.CONN_ID = CONNECTION_ID
                      AND   t.CASHSUM = CASH_SUM
                      AND t.REC_TABLE_ID = RECORD_TABLE_ID),
         INTEGER_20_LEVEL = 100000,
         NEXT_RECORD_TABLE_ID = ""
   WHERE CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
   AND   CASH_SUM = ?;


 update_CashData_NEW_LAST_SELECT:
       UPDATE CashData
       SET    LONG_20 = ?
       WHERE  CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
       AND    CASH_SUM = ?
       AND    RECORD_TABLE_ID IN (SELECT c.RECORD_TABLE_ID
                                  FROM   CashData AS c
                                  WHERE  c.CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
                                  AND    c.CASH_SUM = ?
                                  ORDER BY c.CASH_SUM,
                                           c.INTEGER_20 ASC,
                                           c.INTEGER_20_LEVEL ASC
                                  LIMIT ?
                                  OFFSET 0 + ifnull((SELECT tab1.RowNumber
                                                     FROM (SELECT c1.RECORD_TABLE_ID AS record_id,
                                                                  row_number() OVER (
                                                                          ORDER BY c1.INTEGER_20 ASC, c1.INTEGER_20_LEVEL ASC
                                                                   ) AS RowNumber
                                                           FROM   CashData AS c1
                                                           WHERE    c1.CONNECTION_ID = (SELECT CONNECTION_ID FROM RegData)
                                                           AND      c1.CASH_SUM = ?
                                                           ORDER BY c1.RECORD_TABLE_ID) AS tab1
                                                     WHERE tab1.record_id = ?), 0)
                                  );



