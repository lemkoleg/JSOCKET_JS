table_CashLastUpdate:
CREATE TABLE IF NOT EXISTS CashLastUpdate
(CASH_SUM TEXT NOT NULL,
 RECORDS_TYPE TEXT NOT NULL,
 LAST_USE TEXT NOT NULL,
 PRIMARY KEY (CASH_SUM)
);

index_CashLastUpdate_last_use:
CREATE INDEX ICashLastUpdateLastUse ON CashLastUpdate(LAST_USE DESC);

trigger_CashLastUpdate_delete:
CREATE TRIGGER TCashLastUpdate_DELETE
AFTER DELETE ON CashLastUpdate
FOR EACH ROW
BEGIN
DELETE FROM CashData WHERE CASH_SUM = old.CASH_SUM;
END;

trigger_CashLastUpdate_Control_Empty_Blocks_Insert:
CREATE TRIGGER TCashLastUpdate_Control_Empty_Blocks_Insert
AFTER INSERT
ON CashLastUpdate
BEGIN
DELETE FROM CashLastUpdate
WHERE CASH_SUM NOT IN
(SELECT CASH_SUM FROM CashData t ORDER BY CASH_SUM);
END;

trigger_CashLastUpdate_Control_Empty_Blocks_Update:
CREATE TRIGGER TCashLastUpdate_Control_Empty_Blocks_Update
AFTER UPDATE
ON CashLastUpdate
BEGIN
DELETE FROM CashLastUpdate
WHERE CASH_SUM NOT IN
(SELECT CASH_SUM FROM CashData t ORDER BY CASH_SUM);
END;

trigger_CashLastUpdate_Control_Count:
CREATE TRIGGER TCashLastUpdate_Control_Count
AFTER INSERT
ON CashLastUpdate
WHEN
(SELECT count(*)
 FROM CashData) >
(SELECT  VALUE_VALUE
 FROM MetaData
 WHERE VALUE_NAME = 'MAX_COUNT_OF_CASHDATA')
BEGIN

DELETE FROM CashLastUpdate
WHERE CASH_SUM NOT IN
(SELECT CASH_SUM
 FROM CashLastUpdate t
 ORDER BY LAST_USE DESC
 LIMIT (SELECT  VALUE_VALUE
        FROM MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_CASHDATA'));

END;

insert_CashLastUpdate:
INSERT OR REPLACE INTO CashLastUpdate
(CASH_SUM, RECORDS_TYPE, LAST_USE)
VALUES
(?, ?, ?);

select_CashLastUpdateAll:
SELECT * FROM CashLastUpdate;

clear_CashLastUpdate:
DELETE FROM CashLastUpdate;

update_CashLastUpdate_last_use:
UPDATE CashLastUpdate
SET    LAST_USE = ? WHERE  CASH_SUM = ?;




