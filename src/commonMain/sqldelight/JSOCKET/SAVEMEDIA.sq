table_SaveMedia:
CREATE TABLE IF NOT EXISTS SaveMedia
(OBJECT_LINK TEXT PRIMARY KEY,
 OBJECT_SIZE INTEGER NOT NULL,
 OBJECT_LENGTH_SECONDS INTEGER NOT NULL,
 OBJECT_EXTENSION TEXT NOT NULL,
 IS_TEMP INTEGER NOT NULL,
 LAST_USED INTEGER NOT NULL);

index_SaveMedia_LastUsed:
CREATE INDEX IF NOT EXISTS ISaveMediaLastUsed ON SaveMedia(LAST_USED, OBJECT_LINK);

index_SaveMedia_IsTemp:
CREATE INDEX IF NOT EXISTS ISaveMediaIsTemp ON SaveMedia(IS_TEMP, OBJECT_LINK);


trigger_SaveMedia_control_temp_count:
CREATE TRIGGER IF NOT EXISTS TSaveMediaControlTempCounts
AFTER INSERT ON SaveMedia
WHEN
new.IS_TEMP = 1
AND
(SELECT count(*)
 FROM SaveMedia
 WHERE IS_TEMP = 1)>
(SELECT  VALUE_VALUE
 FROM MetaData
 WHERE VALUE_NAME = 'MAX_COUNT_OF_TEMP_SAVEMEDIA')
BEGIN
DELETE FROM SaveMedia WHERE OBJECT_LINK NOT IN
(SELECT OBJECT_LINK FROM SaveMedia
 WHERE IS_TEMP = 1
 ORDER BY LAST_USED
 LIMIT (SELECT VALUE_VALUE
        FROM  MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_TEMP_SAVEMEDIA'))
 AND IS_TEMP = 1;
END;

trigger_SaveMedia_control_count:
CREATE TRIGGER IF NOT EXISTS TSaveMediaControlCounts
AFTER INSERT ON SaveMedia
WHEN
new.IS_TEMP = 0
AND
(SELECT count(*)
 FROM SaveMedia
 WHERE IS_TEMP = 0)>
(SELECT  VALUE_VALUE
 FROM MetaData
 WHERE VALUE_NAME = 'MAX_COUNT_OF_SAVEMEDIA')
BEGIN
DELETE FROM SaveMedia WHERE OBJECT_LINK NOT IN
(SELECT OBJECT_LINK FROM SaveMedia
 WHERE IS_TEMP = 0
 ORDER BY LAST_USED
 LIMIT (SELECT VALUE_VALUE
        FROM  MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_SAVEMEDIA'))
 AND IS_TEMP = 0;
END;

insert_SaveMedia:
INSERT OR REPLACE INTO SaveMedia
( OBJECT_LINK,
  OBJECT_SIZE,
  OBJECT_LENGTH_SECONDS,
  OBJECT_EXTENSION,
  IS_TEMP,
  LAST_USED)
VALUES
(?, ?, ?, ?, ?, ?);


select_SaveMedia_all:
SELECT *
FROM SaveMedia;

delete_SaveMedia:
DELETE FROM SaveMedia
WHERE OBJECT_LINK = ?;



