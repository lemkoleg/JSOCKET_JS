table_SaveMedia:
CREATE TABLE IF NOT EXISTS SaveMedia
(OBJECT_ID TEXT PRIMARY KEY,                           --IDENTIFICATOR5
 CONNECTION_ID INTEGER NOT NULL,                       --LONG_19
 AVATAR_ID TEXT,                                       --IDENTIFICATOR6
 OBJECT_OWNER TEXT,                                    --IDENTIFICATOR7
 OBJECT_NAME TEXT,                                     --STRING_5
 OBJECT_SIZE INTEGER,                                  --INTEGER_4
 OBJECT_LENGTH_SECONDS INTEGER,                        --INTEGER_5
 OBJECT_SERVER TEXT,                                   --STRING_6
 OBJECT_PROFILE_STRING TEXT,                           --STRING_7
 OBJECT_LINK TEXT,                                     --STRING_8
 OBJECT_EXTENSION TEXT,                                --STRING_9
 AVATAR_LINK TEXT,                                     --STRING_18
 AVATAR_SERVER TEXT,                                   --STRING_16
 ORIGINAL_AVATAR_SIZE INTEGER,                         --STRING_17
 SMALL_AVATAR BLOB,
 BIG_AVATAR BLOB,
 IS_TEMP INTEGER NOT NULL,                             --INTEGER_6
 IS_DOWNLOAD INTEGER NOT NULL,                         --INTEGER_7
 LAST_USED INTEGER NOT NULL,                           --LONG_20

 CHECK (length(CONNECTION_ID) = 18
 AND length(OBJECT_ID) = 18
 AND (IS_TEMP BETWEEN 0 AND 1)
 AND (IS_DOWNLOAD BETWEEN 0 AND 1)));

index_SaveMedia_ConnectionId:
CREATE INDEX ISaveMediaConnectionId ON SaveMedia(CONNECTION_ID);

index_SaveMedia_LastUsed:
CREATE INDEX ISaveMediaLastUsed ON SaveMedia(LAST_USED, OBJECT_ID);

index_SaveMedia_IsTemp:
CREATE INDEX ISaveMediaIsTemp ON SaveMedia(IS_TEMP, OBJECT_ID);

index_SaveMedia_AvatarId:
CREATE INDEX ISaveMediaAvatarId ON SaveMedia(AVATAR_ID);

trigger_SaveMedia_control_temp_count:
CREATE TRIGGER TSaveMediaControlTempCounts
AFTER INSERT ON SaveMedia
FOR EACH ROW
WHEN
new.IS_TEMP = 1
AND
(SELECT count(*)
 FROM SaveMedia
 WHERE IS_TEMP = 1)>
(SELECT  VALUE_VALUE
 FROM MetaData
 WHERE VALUE_NAME = 'MAX_COUNT_OF_TEMP_SAVEMEDIA')
BEGIN
DELETE FROM SaveMedia WHERE OBJECT_ID NOT IN
(SELECT OBJECT_ID FROM SaveMedia
 WHERE IS_TEMP = 1
 ORDER BY LAST_USED
 LIMIT (SELECT VALUE_VALUE
        FROM  MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_TEMP_SAVEMEDIA'))
 AND IS_TEMP = 1;
END;

trigger_SaveMedia_control_count:
CREATE TRIGGER TSaveMediaControlCounts
AFTER INSERT ON SaveMedia
FOR EACH ROW
WHEN
new.IS_TEMP = 0
AND
(SELECT count(*)
 FROM SaveMedia
 WHERE IS_TEMP = 0)>
(SELECT  VALUE_VALUE
 FROM MetaData
 WHERE VALUE_NAME = 'MAX_COUNT_OF_SAVEMEDIA')
BEGIN
DELETE FROM SaveMedia WHERE OBJECT_ID NOT IN
(SELECT OBJECT_ID FROM SaveMedia
 WHERE IS_TEMP = 0
 ORDER BY LAST_USED
 LIMIT (SELECT VALUE_VALUE
        FROM  MetaData
        WHERE VALUE_NAME = 'MAX_COUNT_OF_SAVEMEDIA'))
 AND IS_TEMP = 0;
END;

insert_SaveMedia:
INSERT OR REPLACE INTO SaveMedia
(OBJECT_ID,
  CONNECTION_ID,
  AVATAR_ID,
  OBJECT_OWNER,
  OBJECT_NAME,
  OBJECT_SIZE,
  OBJECT_LENGTH_SECONDS,
  OBJECT_SERVER,
  OBJECT_PROFILE_STRING,
  OBJECT_LINK,
  OBJECT_EXTENSION,
  AVATAR_LINK,
  AVATAR_SERVER,
  ORIGINAL_AVATAR_SIZE,
  SMALL_AVATAR,
  BIG_AVATAR,
  IS_TEMP,
  IS_DOWNLOAD,
  LAST_USED)
VALUES 
(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);


select_SaveMedia_all:
SELECT *
FROM SaveMedia;

delete_SaveMedia:
DELETE FROM SaveMedia
WHERE OBJECT_ID = ?;



