table_Messeges:
CREATE TABLE IF NOT EXISTS Messeges
(CHATS_ID TEXT NOT NULL,                               --IDENTIFICATOR_11
 MESSEGES_COUNT INTEGER NOT NULL,                      --LONG_12
 ADDING_DATE INTEGER NOT NULL,                         --LONG_11
 PERIOD_FOR INTEGER NOT NULL,                          --LONG_13
 MESSEGES_OWNER TEXT NOT NULL,                         --IDENTIFICATOR_12
 MESSEGES_ANSWER TEXT,                                 --LONG_14
 MESSEGES_ANSWER_START_TEXT TEXT,                      --STRING_13
 MESSEGES_ADRESSER TEXT,                               --IDENTIFICATOR_13
 OBJECT_ID TEXT,                                       --IDENTIFICATOR_5
 AVATAR_ID TEXT,                                       --IDENTIFICATOR_6
 OBJECT_OWNER TEXT,                                    --IDENTIFICATOR_7
 OBJECT_TYPE TEXT NOT NULL,                            --STRING_12.substring(5, 6)
 START_TEXT TEXT,                                      --STRING_11
 MESSEGES_COST INTEGER,                                --INTEGER_11
 COST_TYPE INTEGER,                                    --INTEGER_12
 MESSEGES_TYPE TEXT NOT NULL,                          --STRING_12.substring(0, 1)
 MESSEGES_ACCESS TEXT NOT NULL,                        --STRING_12.substring(1, 2)
 MESSEGES_STATUS TEXT NOT NULL,                        --STRING_12.substring(2, 3)
 HAVE_FULL_TEXT TEXT NOT NULL,                         --STRING_12.substring(3, 4)
 HAVE_ANSWER TEXT NOT NULL,                            --STRING_12.substring(4, 5)
 LAST_CHANGED TEXT DEFAULT "0" NOT NULL,               --LONG_15
 FULL_TEXT TEXT,                                       --STRING_14
 OBJECT_NAME TEXT,                                     --STRING_5
 OBJECT_SERVER TEXT,                                   --STRING_6
 OBJECT_PROFILE_STRING TEXT,                           --STRING_7
 OBJECT_LINK TEXT,                                     --STRING_8
 OBJECT_EXTENSION TEXT,                                --STRING_9
 AVATAR_LINK TEXT,                                     --STRING_18
 AVATAR_SERVER TEXT,                                   --STRING_16
 ORIGINAL_AVATAR_SIZE TEXT,                            --STRING_17
 MESSEGES_AVATAR BLOB,
 OBJECT_AVATAR BLOB,
 ANSWER_OBJECT_AVATAR BLOB,
 STRING_20 TEXT,
 LAST_SELECT TEXT NOT NULL ,                                    --LONG-20

 CHECK (length(CHATS_ID) = 18
 AND length(MESSEGES_OWNER) = 18
),
PRIMARY KEY (CHATS_ID, MESSEGES_COUNT));

index_Messeges_order_desc:
CREATE INDEX IMessegesOrderDesc ON Messeges(CHATS_ID, MESSEGES_COUNT DESC);

trigger_Messeges_control_count:
CREATE TRIGGER TControlCountsMesseges
AFTER INSERT ON Messeges
FOR EACH ROW
WHEN
(SELECT count(*) FROM Messeges WHERE CHATS_ID = new.CHATS_ID)>
(SELECT  VALUE_VALUE FROM MetaData WHERE VALUE_NAME = 'MAX_COUNT_OF_MESSEGES')
BEGIN
  DELETE FROM Messeges
  WHERE CHATS_ID = new.CHATS_ID
  AND MESSEGES_COUNT <
  (SELECT min(MESSEGES_COUNT)
   FROM Messeges
   WHERE CHATS_ID = new.CHATS_ID
   ORDER BY CHATS_ID, MESSEGES_COUNT DESC
   LIMIT (SELECT  VALUE_VALUE
          FROM MetaData
          WHERE VALUE_NAME = 'MAX_COUNT_OF_MESSEGES'));
END;

trigger_Messeges_mess_without_cahts:
CREATE TRIGGER TControlMessWithOutChats
AFTER INSERT ON Messeges
BEGIN
  DELETE FROM Messeges
  WHERE CHATS_ID NOT IN (SELECT CHATS_ID FROM Chats);
END;


insert_Messeges:
INSERT OR REPLACE INTO Messeges
( CHATS_ID,
  MESSEGES_COUNT,
  ADDING_DATE,
  PERIOD_FOR,
  MESSEGES_OWNER,
  MESSEGES_ANSWER,
  MESSEGES_ANSWER_START_TEXT,
  MESSEGES_ADRESSER,
  OBJECT_ID,
  AVATAR_ID,
  OBJECT_OWNER,
  OBJECT_TYPE,
  START_TEXT,
  MESSEGES_COST,
  COST_TYPE,
  MESSEGES_TYPE,
  MESSEGES_ACCESS,
  MESSEGES_STATUS,
  HAVE_FULL_TEXT,
  HAVE_ANSWER,
  LAST_CHANGED,
  FULL_TEXT,
  OBJECT_NAME,
  OBJECT_SERVER,
  OBJECT_PROFILE_STRING,
  OBJECT_LINK,
  OBJECT_EXTENSION,
  AVATAR_LINK,
  OBJECT_SERVER,
  AVATAR_SERVER,
  ORIGINAL_AVATAR_SIZE,
  MESSEGES_AVATAR,
  OBJECT_AVATAR,
  ANSWER_OBJECT_AVATAR,
  STRING_20,
  LAST_SELECT)
VALUES 
( ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);


select_Messeges_limit:
SELECT *
FROM Messeges
WHERE CHATS_ID = ?
AND MESSEGES_COUNT < ?
ORDER BY CHATS_ID, MESSEGES_COUNT DESC
LIMIT (SELECT VALUE_VALUE
        FROM   MetaData
        WHERE  VALUE_NAME = 'LIMIT_FOR_SELECT');

clear_Messeges:
DELETE FROM Messeges;